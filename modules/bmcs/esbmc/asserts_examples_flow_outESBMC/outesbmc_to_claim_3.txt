file asserts_examples_flow.c: Parsing
Converting
Type-checking asserts_examples_flow
Generating GOTO Program
Pointer Analysis
Adding Pointer Checks
Starting Bounded Model Checking
Unwinding loop 0 iteration 1 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 2 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 3 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 4 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 5 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 6 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 7 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 8 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 9 file asserts_examples_flow.c line 26 function main
Unwinding loop 0 iteration 10 file asserts_examples_flow.c line 26 function main
Unwinding loop 1 iteration 1 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 2 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 3 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 4 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 5 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 6 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 7 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 8 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 9 file asserts_examples_flow.c line 32 function main
Unwinding loop 1 iteration 10 file asserts_examples_flow.c line 32 function main
Unwinding loop 3 iteration 1 file asserts_examples_flow.c line 45 function main
Unwinding loop 3 iteration 2 file asserts_examples_flow.c line 45 function main
Unwinding loop 3 iteration 3 file asserts_examples_flow.c line 45 function main
Unwinding loop 4 iteration 1 file asserts_examples_flow.c line 44 function main
Unwinding loop 5 iteration 1 file asserts_examples_flow.c line 43 function main
Unwinding loop 6 iteration 1 file asserts_examples_flow.c line 53 function main
Unwinding loop 6 iteration 2 file asserts_examples_flow.c line 53 function main
Unwinding loop 6 iteration 3 file asserts_examples_flow.c line 53 function main
Unwinding loop 7 iteration 1 file asserts_examples_flow.c line 64 function main
Unwinding loop 7 iteration 2 file asserts_examples_flow.c line 64 function main
Unwinding loop 7 iteration 3 file asserts_examples_flow.c line 64 function main
Unwinding loop 8 iteration 1 file asserts_examples_flow.c line 63 function main
size of program expression: 245 assignments
Generated 1 VCC(s), 1 remaining after simplification
Encoding remaining VCC(s) using integer/real arithmetic
Solving with SMT Solver Z3 v2.19
Runtime decision procedure: 0.004s
Building error trace

Counterexample:

State 1 file /usr/include/stdio.h line 168 thread 0
----------------------------------------------------
  stdin=(assignment removed)

State 2 file /usr/include/stdio.h line 169 thread 0
----------------------------------------------------
  stdout=(assignment removed)

State 3 file /usr/include/stdio.h line 170 thread 0
----------------------------------------------------
  stderr=(assignment removed)

State 4 file <built-in> line 12 thread 0
----------------------------------------------------
  __ESBMC_alloc=(assignment removed)

State 5 file <built-in> line 13 thread 0
----------------------------------------------------
  __ESBMC_deallocated=(assignment removed)

State 6 file <built-in> line 14 thread 0
----------------------------------------------------
  __ESBMC_is_dynamic=(assignment removed)

State 7 file <built-in> line 15 thread 0
----------------------------------------------------
  __ESBMC_alloc_size=(assignment removed)

State 8 file <built-in> line 21 thread 0
----------------------------------------------------
  __ESBMC_rounding_mode=0 (00000000000000000000000000000000)

State 10 file asserts_examples_flow.c line 9 function main thread 0
----------------------------------------------------
  asserts_examples_flow::main::1::r=2 (00000000000000000000000000000010)

State 13 file asserts_examples_flow.c line 19 function main thread 0
----------------------------------------------------
  asserts_examples_flow::main::1::k=5 (00000000000000000000000000000101)

Violated property:
  file asserts_examples_flow.c line 20 function main
  assertion 0
  FALSE

VERIFICATION FAILED
