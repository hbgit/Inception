#!/usr/bin/env python 
from __future__ import print_function 
import commands 
import sys 
import os 
import re 

# Script generated by Inception tool 
# Goal: Check each assertion zero added by INCEPTION to data generation 

unwindresult = re.compile("unwinding assertion loop") 
violatedresult = re.compile("VERIFICATION FAILED") 
resultesbmc = "" 
if not os.path.exists("asserts_examples_flow_outESBMC"):
    os.mkdir("asserts_examples_flow_outESBMC")
# ------------ Checking Claim < 1 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_1.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 1 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 2 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_2.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 2 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 3 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_3.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 3 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 4 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_4.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 4 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 5 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_5.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 5 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 6 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_6.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 6 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 7 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_7.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 7 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 8 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_8.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 8 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 9 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_9.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 9 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 10 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_10.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 10 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 11 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_11.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 11 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 12 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_12.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 12 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 13 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_13.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 13 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 14 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_14.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 14 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 15 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_15.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 15 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 16 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_16.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 16 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 17 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_17.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 17 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 18 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_18.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 18 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 19 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_19.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 19 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 20 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_20.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 20 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 21 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_21.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 21 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 22 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_22.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 22 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 23 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_23.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 23 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 24 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_24.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 24 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 25 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_25.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 25 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 26 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_26.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 26 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
# ------------ Checking Claim < 27 > 
unwindstatus = False 
bound = 15 
# Name to counterexample file
cefile = "asserts_examples_flow_outESBMC/outesbmc_to_claim_27.txt"
esbmc_cmd = " esbmc_v1_18 --64 --no-library --claim 27 --no-unwinding-assertions --no-slice --unwind " + str(bound) + " asserts_examples_flow.c" 
resultesbmc = commands.getoutput( esbmc_cmd )
matchresult = violatedresult.search(resultesbmc) 
if matchresult is not None: 
    print("VERIFICATION FAILED") 
    
    # saiving counterexample
    commands.getoutput(" echo \""+ resultesbmc +"\" > " + cefile )
else: 
    print("VERIFICATION SUCCESSEFUL") 
    
